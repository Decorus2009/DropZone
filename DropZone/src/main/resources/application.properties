# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:postgresql://localhost:5432/dropzonedb
spring.datasource.username=postgres
spring.datasource.password=postgres@123
spring.datasource.driver-class-name=org.postgresql.Driver

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=create

# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Max allowed size of files to upload
spring.http.multipart.max-file-size=500Mb
spring.http.multipart.max-request-size=500Mb

security.basic.enabled=false

security.oauth2.client.client-id=c2948c2364b546ada27b88ba38d5d9e7
security.oauth2.client.client-secret=secret
security.oauth2.client.access-token-uri=https://oauth.yandex.ru/token
security.oauth2.client.user-authorization-uri=https://oauth.yandex.ru/authorize
security.oauth2.client.authentication-scheme=query
security.oauth2.client.client-authentication-scheme=form
security.oauth2.client.token-name=oauth_token
security.oauth2.client.grant-type=authorization_code

security.oauth2.resource.user-info-uri=https://login.yandex.ru/info

#logging.level.org.springframework.security=debug